// <auto-generated />
using System;
using ContactsBook.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactsBook.Persistence.Migrations
{
    [DbContext(typeof(ContactsBookDatabaseContext))]
    [Migration("20230831152844_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactsBook.Domain.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Iban")
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Sofia, Iztok",
                            CreatedOn = new DateTime(2023, 8, 31, 15, 28, 44, 198, DateTimeKind.Utc).AddTicks(1635),
                            DateOfBirth = new DateTime(1980, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Adam",
                            Iban = "BG18RZBB91550123456789",
                            LastName = "Baum",
                            PhoneNumber = "555-00001"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Plovdiv, Izgrev",
                            CreatedOn = new DateTime(2023, 8, 31, 15, 28, 44, 198, DateTimeKind.Utc).AddTicks(1643),
                            DateOfBirth = new DateTime(1984, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bob",
                            Iban = "BG18RZBB91550123456789",
                            LastName = "Apple",
                            PhoneNumber = "555-00002"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Sofia, Geo Milev 123",
                            CreatedOn = new DateTime(2023, 8, 31, 15, 28, 44, 198, DateTimeKind.Utc).AddTicks(1645),
                            DateOfBirth = new DateTime(1991, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dusty",
                            Iban = "BG18RZBB91550123456789",
                            LastName = "Carr",
                            PhoneNumber = "777-88881"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Sofia, Iztok",
                            CreatedOn = new DateTime(2023, 8, 31, 15, 28, 44, 198, DateTimeKind.Utc).AddTicks(1646),
                            DateOfBirth = new DateTime(1972, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Chris",
                            Iban = "BG18RZBB91550123456789",
                            LastName = "Cross",
                            PhoneNumber = "777-51516"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
